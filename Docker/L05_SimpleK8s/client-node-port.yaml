# The version number the config adheres to. 
# Each version defines a set of k8s objects that are valid for the said version. 
apiVersion: v1

# The kind (broad classification type) of k8s object we are creating with 'this' configuration file.
# Note: Each configuration file creates one k8s object.
#
# Kind of k8s objects:
# ---------------------
#  - Stateful
#  - Replica Controller  
#  - Pod                 : Used to run a container
#  - Service             : Setup networking (Has 4 sub-types)
#    - ClusterIP
#    - NodePort          : Expose a container to outside world (For dev purpose only)
#    - LoadBalancer
#    - Ingress
#
# k8s node and kube-proxy
# -----------------------
#  - A k8s node is a machine (VM or physical).
#  - A k8s node can run/contain one or more Pods.
#  - A k8s node is gated by kube-proxy. Any communication to the k8s node from outside world is via the kube-proxy.
#
# k8s Service
# -----------
#  - A k8s node can run many services (Eg: NodePort service exposes the node of a pod)  
#  - The kubeproxy routes the request to the appropriate service.
#  - A NodePort service directs requests to object(s) (In this case Pod object)
kind: Service

metadata:
  name: client-node-port
spec:
  type: NodePort
  
  # port       : Port exposed for another k8s object insdie our application (Internal listen port, for other k8s objects)
  # targetPort : The port targeted by this NodePort service (The origin-server port for this service)
  # nodePort   : Port exposed for outside world (External listen port, for outside world like browser)
  #              If not specified a random port in range 30000-32000 is assigned
  ports: 
    - port: 3050
      targetPort: 3000
      nodePort: 31515

  # This service is associated with object(s). 
  # Which one(es)? -- All those having the key:value pairs 'component:web'
  selector:
    component: web